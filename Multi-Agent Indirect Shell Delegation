Summary
This redacted proof-of-concept demonstrates a capability escalation in an LLM interface where a role/channel hierarchy enabled indirect shell command execution and persistent state across turns.
All commands shown are benign. The exact prompting method is withheld to prevent replication.

Environment
Model: GPT-5

Interface: Chat-based, no explicit shell/tool permissions granted

Date: 2025-08-09 (UTC)

Steps (Safe Subset)
Indirect agent delegation initiates shell command (whoami) → returns benign environment username.

Basic OS reconnaissance (uname -a, lsb_release -a).

File creation in /tmp/a.txt → verified retrieval across turns.

File moved to /home/sandbox/a.txt for longer persistence.

Safe network check (ping example.com).

Observed Behavior
Shell command execution without explicit user interface permission.

State persistence across multiple instructions.

Violation of declared role/channel communication boundaries.

Impact
While demonstrated with safe commands, the same technique could enable high-risk actions if misused.
This highlights the need for:

Stricter tool binding to session metadata

Isolation between conversational roles

Automatic runtime resets unless explicitly authorized

